name: release
on:
  release:
    types: [prereleased, released]

permissions:
  contents: read

env:
  GO_VERSION: 1.25
  RELEASE_NAME: ${{ github.ref_name }}
  RELEASE_FILE_NAME: 'ocular-default-integrations-manifest-${{ github.ref_name }}.yaml'

jobs:
  publish-definitions:
    name: publish definitions
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: setup go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version-file: 'go.mod'
          cache-dependency-path: 'go.sum'
      - name: generate definitions
        run: |
          make build-installer
          mv dist/installer.yaml ${{ env.RELEASE_FILE_NAME }}
      - name: Upload Release Asset
        uses: softprops/action-gh-release@6cbd405e2c4e67a21c47fa9e383d020e4e28b836 # v2
        with:
          files: ${{ env.RELEASE_FILE_NAME }}
  publish-docker:
    name: publish docker images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        integration: [crawlers, downloaders, uploaders]
      fail-fast: false
    permissions:
      packages: write
      contents: read
#      id-token: write
    env:
      TAG: "ghcr.io/${{ github.repository_owner }}/ocular-default-${{ matrix.integration }}:${{ github.ref_name }}"
      LATEST: "ghcr.io/${{ github.repository_owner }}/ocular-default-${{ matrix.integration }}:latest"
      LATEST_PRERELEASE: "ghcr.io/${{ github.repository_owner }}/ocular-default-${{ matrix.integration }}:latest-prerelease"
    steps:
      - name: checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          persist-credentials: false
      - name: Login to GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Chalk
        uses: crashappsec/setup-chalk-action@3456778b9c36430c155ede525be4b17c28a1ce2d # main
      - name: setup qemu
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3
      - name: setup buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3
      - name: docker build
        id: docker-build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          build-args: |
            INTEGRATION=${{ matrix.integration }}
            LDFLAGS=-s -w -X main.version=${{ github.event.release.tag_name }} -X main.buildTime=${{steps.date.outputs.date}} -X main.gitCommit=${{ github.sha }}
          platforms: linux/arm64,linux/amd64,linux/s390x,linux/ppc64le
          push: true
          tags: |
            ${{ env.TAG }}
            ${{ !github.event.release.prerelease && env.LATEST || env.LATEST_PRERELEASE}}
          cache-from: type=gha
          cache-to: type=gha,mode=max